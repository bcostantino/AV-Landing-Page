<!DOCTYPE html>
<!-- Coding by CodingLab | www.codinglabweb.com-->
<html lang="en" dir="ltr">
  <head>
    <link rel="preconnect" href="https://www.google.com">
    <link rel="preconnect" href="https://www.gstatic.com" crossorigin>
    <script src="https://www.google.com/recaptcha/api.js?render=explicit"></script>
    <%- include('./partials/head'); %>
    <link href="/static/css/style.css" rel="stylesheet">
    <link rel="stylesheet" href="/static/css/signup_style.css">
    <!--<style>
      /* The message box is shown when the user clicks on the password field */
      #message {
        display:none;
        background: #f1f1f1;
        color: #000;
        position: relative;
        padding: 20px;
        margin-top: 10px;
        line-height: 15px;
      }

      #message p {
        padding: 10px 35px;
        font-size: 18px;
      }

      /* Add a green text color and a checkmark when the requirements are right */
      .valid {
        color: green;
      }

      /*.valid:before {
        position: relative;
        left: -35px;
        content: "&#10004;";
      }*/

      /* Add a red text color and an "x" icon when the requirements are wrong */
      .invalid {
        color: red;
      }

      /*.invalid:before {
        position: relative;
        left: -35px;
        content: "&#10006;";
      }*/
    </style>-->
  </head>
  <body>
    <%- include('./partials/navbar', { active_page: "signup" }); %>

    <div id="registration-container" class="wrapper">
      <h2>Registration</h2>
      <form id="sign-up-form" action="/signup">
        <div class="input-box">
          <input id="name" class="text-input" type="text" placeholder="Enter your name" required>
        </div>
        <div class="input-box">
          <input id="email" class="text-input" type="text" placeholder="Enter your email" required>
        </div>
        <div class="input-box">
          <input id="password" class="text-input" type="password" placeholder="Create password" required>
        </div>
        <div id="message">
          <h3>Password must contain the following:</h3>
          <span id="letter" class="invalid">A <b>lowercase</b> letter</span>
          <span id="capital" class="invalid">A <b>capital (uppercase)</b> letter</span>
          <span id="number" class="invalid">A <b>number</b></span>
          <span id="length" class="invalid">Minimum <b>8 characters</b></span>
        </div>
        <div class="input-box">
          <input id="password-confirm" class="text-input" type="password" placeholder="Confirm password" required>
        </div>
        <div class="policy">
          <input type="checkbox">
          <h3 style="margin: auto 0.5rem;">I accept all <a href="">terms & conditions</a></h3>
        </div>
        <div id="recaptcha" class="mx-auto my-3" style="max-width: max-content;">

        </div>
        <div class="input-box button">
          <input class="btn btn-light rounded" type="Submit" value="Register Now">
        </div>
        <div class="text">
          <h3>Already have an account? <a href="#">Login now</a></h3>
        </div>
      </form>
    </div>
  </body>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <script>
    $(document).ready(function() {
      // How this code snippet works:
      // This logic overwrites the default behavior of `grecaptcha.ready()` to
      // ensure that it can be safely called at any time. When `grecaptcha.ready()`
      // is called before reCAPTCHA is loaded, the callback function that is passed
      // by `grecaptcha.ready()` is enqueued for execution after reCAPTCHA is
      // loaded.
      if(typeof grecaptcha === 'undefined') {
        grecaptcha = {};
      }
      grecaptcha.ready = function(cb){
        if(typeof grecaptcha === 'undefined') {
          // window.__grecaptcha_cfg is a global variable that stores reCAPTCHA's
          // configuration. By default, any functions listed in its 'fns' property
          // are automatically executed when reCAPTCHA loads.
          const c = '___grecaptcha_cfg';
          window[c] = window[c] || {};
          (window[c]['fns'] = window[c]['fns']||[]).push(cb);
        } else {
          cb();
        }
      }

      // If reCAPTCHA is still loading, grecaptcha will be undefined.
      grecaptcha.ready(function(){
        console.log('grecaptcha: ', grecaptcha);
        grecaptcha.render("recaptcha", {
          sitekey: "6LeC9OkkAAAAAAIVaphcEmTntM70qVDHhRTf9zCS",
          //callback: updateSubmitEnabled
        });
      });
    });

    // this is the id of the form
    $("#sign-up-form").submit(function(e) {
      e.preventDefault(); // avoid to execute the actual submit of the form.
      const form = $(this);
      const url = form.attr('action');
      const data = {
        name: $('input#name').val(),
        email: $('input#email').val(),
        password: $('input#password').val(),
        passwordConfirm: $('input#password-confirm').val()
      };
      $.ajax({
        type: "POST",
        url: url,
        data: data, //form.serialize(), // serializes the form's elements.
        success: function(data) {
          console.log('signup response data: ', data);
          //alert(data); // show response
          //window.location.href = "/portal";
        }
      }); 
    });
  </script>
  <script>
    var myInput = document.getElementById("password");
    var letter = document.getElementById("letter");
    var capital = document.getElementById("capital");
    var number = document.getElementById("number");
    var length = document.getElementById("length");
    
    // When the user clicks on the password field, show the message box
    myInput.onfocus = function() {
      document.getElementById("message").style.display = "inline-block";
    }
    
    // When the user clicks outside of the password field, hide the message box
    myInput.onblur = function() {
      document.getElementById("message").style.display = "none";
    }
    
    // When the user starts to type something inside the password field
    myInput.onkeyup = function() {
      // Validate lowercase letters
      var lowerCaseLetters = /[a-z]/g;
      if(myInput.value.match(lowerCaseLetters)) {
        letter.classList.remove("invalid");
        letter.classList.add("valid");
      } else {
        letter.classList.remove("valid");
        letter.classList.add("invalid");
    }
    
      // Validate capital letters
      var upperCaseLetters = /[A-Z]/g;
      if(myInput.value.match(upperCaseLetters)) {
        capital.classList.remove("invalid");
        capital.classList.add("valid");
      } else {
        capital.classList.remove("valid");
        capital.classList.add("invalid");
      }
    
      // Validate numbers
      var numbers = /[0-9]/g;
      if(myInput.value.match(numbers)) {
        number.classList.remove("invalid");
        number.classList.add("valid");
      } else {
        number.classList.remove("valid");
        number.classList.add("invalid");
      }
    
      // Validate length
      if(myInput.value.length >= 8) {
        length.classList.remove("invalid");
        length.classList.add("valid");
      } else {
        length.classList.remove("valid");
        length.classList.add("invalid");
      }
    }
    </script>
</html>