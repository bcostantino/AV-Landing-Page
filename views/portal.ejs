<!DOCTYPE html>
<!-- Coding by CodingLab | www.codinglabweb.com-->
<html lang="en" dir="ltr">
  <head>
    <%- include('./partials/head'); %>
    <link href="/static/css/style.css" rel="stylesheet">
    <style>

      /* Style the form */
      #regForm {
        /*margin: 100px auto;*/
        padding: 40px;
        /*width: 70%;
        min-width: 300px;*/
      }

      #checkout-and-portal-button {
        height: 36px;
        background: #556cd6;
        color: white;
        width: 100%;
        font-size: 14px;
        border: 0;
        font-weight: 500;
        cursor: pointer;
        letter-spacing: 0.6;
        border-radius: 0 0 6px 6px;
        transition: all 0.2s ease;
        box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);
      }
      #checkout-and-portal-button:hover {
        opacity: 0.8;
      }

      /* Mark input boxes that gets an error on validation: */
      input.invalid {
        background-color: #ffdddd;
      }

      /* Hide all steps by default: */
      .tab {
        display: none;
      }

      /* Make circles that indicate the steps of the form: */
      .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: white;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
      }

      /* Mark the active step: */
      .step.active {
        opacity: 1;
      }

      /* Mark the steps that are finished and valid: */
      .step.finish {
        background-color: var(--light);
      }
    </style>
            <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
            <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
  </head>
  <body>
    <%- include('./partials/navbar2', { active_page: "portal" }); %>

    <div class="container-fluid p-4" style="margin-top: 4rem;">
      <% if (!locals.user.emailVerified) { %>
        <div class="alert alert-dismissible alert-warning px-3 py-2 mb-3">
          <button type="button" class="btn-close" data-bs-dismiss="alert" style="padding: 0; margin: 2.1rem 2rem;"></button>
          <h5 class="alert-heading mb-1">Please verify your email!</h5>
          <p class="mb-0 small">
            To secure your AutoViz account and continue with registration, we just need to verify your email address: <strong><%- locals.user.email %></strong>. 
            Click <a href="#" onclick="fetch('/resend-email-verification', { method: 'GET' });">here</a> to resend the verification email.
          </p>
        </div>
      <% } %>
      <div class="row g-5">
        <div class="col-xl-3 col-sm-12">
          <div class="card bg-light mb-3 w-100">
            <div class="card-body">
              <ul class="nav nav-pills flex-column">
                <li class="nav-item">
                  <a class="nav-link active" href="#"><i class="fa fa-rocket me-2"></i>Getting Started</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="#"><i class="bi bi-gear-fill me-2"></i>Settings</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link disabled" href="#">Etc.</a>
                </li>
                <!--<li class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Dropdown</a>
                  <div class="dropdown-menu" style="">
                    <a class="dropdown-item" href="#">Action</a>
                    <a class="dropdown-item" href="#">Another action</a>
                    <a class="dropdown-item" href="#">Something else here</a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="#">Separated link</a>
                  </div>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="#">Link</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link disabled" href="#">Disabled</a>
                </li>-->
              </ul>
            </div>
          </div>
        </div>
        <div class="col-xl-6 col-sm-12">
          <div class="card bg-light mb-3 w-100">
            <div class="card-header">
              <div style="width: max-content;">
                <h4 class="my-1">Getting Started</h4>
              </div>
            </div>
            <div class="card-body">
              <!--<h5 class="card-title">Secondary card title</h5>-->
    
              <!-- get started wizard - see https://www.w3schools.com/howto/howto_js_form_steps.asp -->
              <% if (!locals.user.license) { %>
                <div class="container p-4 mx-auto" style="max-width: max-content; text-align: center;">
                  <h4>Select a Plan</h4>
                  <div class="m-1">
                    Learn more about pricing and features <a href="/#pricing" target="_blank">here</a>!
                  </div>
                  <div class="btn-group my-3" role="group" aria-label="Basic radio toggle button group">
                    <input type="radio" class="btn-check" name="btnradio" id="btnradio1" autocomplete="off" data-lookup-key="av-free" checked>
                    <label class="btn btn-outline-dark" for="btnradio1">Free</label>
                    <input type="radio" class="btn-check" name="btnradio" id="btnradio2" autocomplete="off" data-lookup-key="av-standard-monthly">
                    <label class="btn btn-outline-dark" for="btnradio2">Standard</label>
                    <input type="radio" class="btn-check" name="btnradio" id="btnradio3" autocomplete="off">
                    <label class="btn btn-outline-dark" for="btnradio3">Enterprise</label>
                  </div>
                  <div class="">
                    <button id="select-plan-submit" class="btn btn-primary"> Continue </button>
                  </div>
                </div>
                <script>
                  document.getElementById('select-plan-submit').addEventListener('click', async () => {
                    try {
                      // Get the lookup key from the data attribute of the button
                      let lookupKey = '';
                      const radios = document.getElementsByName('btnradio');
                      for (let i = 0; i < radios.length; i++) {
                        if (radios[i].checked) {
                          console.log(`Radio ${i + 1} is selected`);
                          lookupKey = radios[i].getAttribute('data-lookup-key');
                          break;
                        }
                      }
                      //console.log(lookupKey);
                      if (!lookupKey) return;
                      //const lookupKey = button.getAttribute('data-lookup-key');
              
                      // Send a request to create a checkout session with the specified price lookup key
                      const response = await fetch('/billing/create-checkout-session', {
                        method: 'POST',
                        headers: {
                          'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ lookup_key: lookupKey })
                      });
              
                      // Redirect the user to the checkout session
                      if (response.status === 303) {
                        // Parse the JSON response
                        const session = await response.json();
                        window.location.href = session.url;
                      }
              
                      if (response.status === 201) {
                        location.reload();
                      }
              
                        
                      
                    } catch (error) {
                      console.error('Error creating checkout session:', error); 
                    }
                  });
                </script>
              <% } else { %>
                <p class="card-text">Welcome to AutoViz.</p>
              <% } %>






              <%#
              
              <form id="regForm" action="">
                <!--<h2>Register your business</h2>-->
                
                <!-- One "tab" for each step in the form: -->
                <div class="tab my-2">
                  
                  <!--<input type="text" class="form-control my-2" placeholder="First name" id="">
                  <input type="text" class="form-control my-2" placeholder="Last name" id="">-->
                </div>
    
                <div style="text-align: center;">
                  <h5>Registering for...</h5>
                  <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
                    <input type="radio" class="btn-check" name="btnradio" id="btnradio1" autocomplete="off" checked="">
                    <label class="btn btn-outline-light" for="btnradio1">Personal</label>
                    <input type="radio" class="btn-check" name="btnradio" id="btnradio2" autocomplete="off" checked="">
                    <label class="btn btn-outline-light" for="btnradio2">Business</label>
                  </div>
                </div>
                
                <div class="tab">Contact Info:
                  <p><input placeholder="E-mail..." oninput="this.className = ''"></p>
                  <p><input placeholder="Phone..." oninput="this.className = ''"></p>
                </div>
                
                <div class="tab">Birthday:
                  <p><input placeholder="dd" oninput="this.className = ''"></p>
                  <p><input placeholder="mm" oninput="this.className = ''"></p>
                  <p><input placeholder="yyyy" oninput="this.className = ''"></p>
                </div>
                
                <div class="tab">Login Info:
                  <p><input placeholder="Username..." oninput="this.className = ''"></p>
                  <p><input placeholder="Password..." oninput="this.className = ''"></p>
                </div>
                
                <div style="overflow:auto;">
                  <div style="float:right;">
                    <button type="button" id="prevBtn" class="btn btn-outline-light" onclick="nextPrev(-1)">Previous</button>
                    <button type="button" id="nextBtn" class="btn btn-outline-light" onclick="nextPrev(1)">Next</button>
                    <!--<button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                    <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>-->
                  </div>
                </div>
                
                <!-- Circles which indicates the steps of the form: -->
                <div style="text-align:center;margin-top:40px;">
                  <span class="step"></span>
                  <span class="step"></span>
                  <span class="step"></span>
                  <span class="step"></span>
                </div>  
              </form>
               %>
    

            </div>
          </div>
        </div>
        <div class="col-xl-3 col-sm-12">
          <div class="card border-secondary mb-3 w-100">
            Hello
          </div>
        </div>

      </div>
      
      <!--<div class="bg-light rounded p-3" style="border: 1px solid var(--dark);">
        Hello
      </div>-->
    </div>
    
  </body>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
  <script defer>
    const billingButton = document.getElementById('billing-button');
    billingButton.addEventListener('click', async () => {
      try {
        const response = await fetch('/billing/create-portal-session', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            customer_id: '<%= locals.user.stripeCustomerId %>'
          })
        });

        if (!response.ok) {
          throw new Error('Unable to create portal session.');
        }

        const { url } = await response.json();

        window.open(url, '_blank'); //window.location.href = url;
      } catch (error) {
        console.error(error);
        alert('An error occurred while trying to manage your billing information.');
      }
    });

    /*var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
      // This function will display the specified tab of the form ...
      var x = document.getElementsByClassName("tab");
      x[n].style.display = "block";
      // ... and fix the Previous/Next buttons:
      if (n == 0) {
        document.getElementById("prevBtn").style.display = "none";
      } else {
        document.getElementById("prevBtn").style.display = "inline";
      }
      if (n == (x.length - 1)) {
        document.getElementById("nextBtn").innerHTML = "Submit";
      } else {
        document.getElementById("nextBtn").innerHTML = "Next";
      }
      // ... and run a function that displays the correct step indicator:
      fixStepIndicator(n)
    }

    function nextPrev(n) {
      // This function will figure out which tab to display
      var x = document.getElementsByClassName("tab");
      // Exit the function if any field in the current tab is invalid:
      if (n == 1 && !validateForm()) return false;
      // Hide the current tab:
      x[currentTab].style.display = "none";
      // Increase or decrease the current tab by 1:
      currentTab = currentTab + n;
      // if you have reached the end of the form... :
      if (currentTab >= x.length) {
        //...the form gets submitted:
        document.getElementById("regForm").submit();
        return false;
      }
      // Otherwise, display the correct tab:
      showTab(currentTab);
    }

    function validateForm() {
      // This function deals with validation of the form fields
      var x, y, i, valid = true;
      x = document.getElementsByClassName("tab");
      y = x[currentTab].getElementsByTagName("input");
      // A loop that checks every input field in the current tab:
      for (i = 0; i < y.length; i++) {
        // If a field is empty...
        if (y[i].value == "") {
          // add an "invalid" class to the field:
          y[i].className += " invalid";
          // and set the current valid status to false:
          valid = false;
        }
      }
      // If the valid status is true, mark the step as finished and valid:
      if (valid) {
        document.getElementsByClassName("step")[currentTab].className += " finish";
      }
      return valid; // return the valid status
    }

    function fixStepIndicator(n) {
      // This function removes the "active" class of all steps...
      var i, x = document.getElementsByClassName("step");
      for (i = 0; i < x.length; i++) {
        x[i].className = x[i].className.replace(" active", "");
      }
      //... and adds the "active" class to the current step:
      x[n].className += " active";
    }*/
  </script>
</html>