<!DOCTYPE html>
<!-- Coding by CodingLab | www.codinglabweb.com-->
<html lang="en" dir="ltr">
  <head>
    <%- include('./partials/head'); %>
    <link rel="preconnect" href="https://www.google.com">
    <link rel="preconnect" href="https://www.gstatic.com" crossorigin>
    <script src="https://www.google.com/recaptcha/api.js?render=explicit" async></script>
    <link href="/static/css/style.css" rel="stylesheet">
    <link rel="stylesheet" href="/static/css/signup_style.css">
  </head>
  <body>
    <%- include('./partials/navbar', { active_page: "signup" }); %>

    <div id="registration-container" class="wrapper">
      <h2>Sign In</h2>

      <div class="alert alert-dismissible alert-primary bg-light text-dark px-3 py-2 my-2" style="display: none;">
        <button type="button" class="btn-close" data-bs-dismiss="alert" style="padding: 0; margin: 2.1rem 2rem;"></button>
        <span id="alert-message" class="small">Text goes here!</span>
      </div>
      
      <form id="sign-in-form" action="/signin">
        <div class="input-box">
          <input id="email" class="text-input" type="text" placeholder="Enter your email" required>
        </div>
        <div class="input-box">
          <input id="password" class="text-input" type="password" placeholder="Create password" required>
        </div>
        <div class="policy">
          <input type="checkbox">
          <h3 style="margin: auto 0.5rem;">Remember me</h3>
        </div>
        <div id="recaptcha" class="mx-auto my-3" style="max-width: max-content;">

        </div>
        <div class="input-box button">
          <input id="sign-in-submit" class="btn btn-light rounded disabled" type="Submit" value="Sign In">
        </div>
        <div class="text">
          <h3>Don't have an account? <a href="/signup">Register now</a></h3>
        </div>
      </form>
    </div>
  </body>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

  <script>
    const updateSubmitEnabled = () => {
      const captcha = grecaptcha.getResponse(),
            email = $('input#email').val(),
            password = $('input#password').val();

      if (!(captcha && email && password))
        $('#sign-in-submit').addClass('disabled');
      else 
        $('#sign-in-submit').removeClass('disabled');

      //console.log('update submit enable ', v);
    }

    let grecaptchaShown = false;

    function showGrepatcha() {
      if (grecaptchaShown) return;

      try {
        grecaptcha.ready(function(){
        console.log('grecaptcha: ', grecaptcha);
        grecaptcha.render("recaptcha", {
          sitekey: "6LeC9OkkAAAAAAIVaphcEmTntM70qVDHhRTf9zCS",
          callback: updateSubmitEnabled
        });
        grecaptchaShown = true;
      });
      } catch (error) {
        console.log('failed to show grepatcha, will retry');
      }
    }

    function showAlert(text = '') {

      // Get the div element by class name
      const alertDiv = document.querySelector('.alert');

      // Set the new text content
      document.querySelector('#alert-message').innerHTML = `<strong>Oh snap!</strong> ${(text) ? text : '<a href="#" class="alert-link">Change a few things up</a> and try submitting again.'}.`;

      // Show the div element
      alertDiv.style.display = 'block';
    }

    $(document).ready(function() {

      $('input#email').change(updateSubmitEnabled);
      $('input#password').change(updateSubmitEnabled);


      // How this code snippet works:
      // This logic overwrites the default behavior of `grecaptcha.ready()` to
      // ensure that it can be safely called at any time. When `grecaptcha.ready()`
      // is called before reCAPTCHA is loaded, the callback function that is passed
      // by `grecaptcha.ready()` is enqueued for execution after reCAPTCHA is
      // loaded.
      if(typeof grecaptcha === 'undefined') {
        grecaptcha = {};
      }
      grecaptcha.ready = function(cb){
        if(typeof grecaptcha === 'undefined') {
          // window.__grecaptcha_cfg is a global variable that stores reCAPTCHA's
          // configuration. By default, any functions listed in its 'fns' property
          // are automatically executed when reCAPTCHA loads.
          const c = '___grecaptcha_cfg';
          window[c] = window[c] || {};
          (window[c]['fns'] = window[c]['fns']||[]).push(cb);
        } else {
          cb();
        }
      }

      // If reCAPTCHA is still loading, grecaptcha will be undefined.
      //showGrepatcha();
      let captchaInterval = setInterval(() => {
        const captchaDiv = document.getElementById("recaptcha");
        if (grecaptchaShown /*captchaDiv && captchaDiv.innerHTML*/) {
          clearInterval(captchaInterval);
          console.log("Captcha successfully displayed.");
        } else {
          showGrepatcha();
        }
      }, 1000); // set the interval time in milliseconds (1000ms = 1s)
    });


    // this is the id of the form
    $("#sign-in-form").submit(function(e) {
      e.preventDefault(); // avoid to execute the actual submit of the form.
      const captcha = grecaptcha?.getResponse()
      if (!captcha)
        return false;

      const form = $(this);
      const url = form.attr('action');
      const payload = {
        email: $('input#email').val(),
        password: $('input#password').val()
      };

      console.log('sending login request');
      $.ajax({
        type: "POST",
        url: url,
        data: payload, //form.serialize(), // serializes the form's elements.
        success: function(data, statu) {
          console.log(url, payload, status);

          // console.log('signup response data: ', data);
          // alert(data); // show response

          window.location.href = "/portal";
        },
        error: function() {
          showAlert('The username and password combination is invalid.');
        }
      }); 
    });
  </script>
</html>